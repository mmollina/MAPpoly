# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check
    
jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 14
          
      - name: Install XQuartz on macOS
        if: runner.os == 'macOS'
        run: brew install xquartz --cask
       
     # - name: Run headless test
     #   if: runner.os == 'Linux'
     #   run: |
     #      npm install
     #      xvfb-run --auto-servernum --server-args='-screen 0, 1600x900x24' npm init -y
     #      export DISPLAY=:99.0

      - uses: r-lib/actions/setup-pandoc@v4

      - uses: r-lib/actions/setup-r@v4
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
          
      - uses: actions/cache@v4
        with:
          path: ${{ runner.os }}-r${{ matrix.config.r }}-cache
          key: r-cache-${{ runner.os }}-${{ matrix.config.r }}-new  # Add "-new" to force a fresh cache
          
      #- uses: actions/cache@v4  # Updated from @v2 to @v4
      #  with:
      #    path: ${{ runner.os }}-r${{ matrix.config.r }}-cache
      #    key: r-cache-${{ runner.os }}-${{ matrix.config.r }}

      - uses: r-lib/actions/setup-r-dependencies@v4
        with:
          extra-packages: rcmdcheck pkgdown
          needs: website

      - uses: r-lib/actions/check-r-package@v4
        with:
          args: 'c("--no-manual", "--as-cran")'
          error-on: '"error"'

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash
          
      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v4  # Updated from @main to @v4
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
          
      - name: Deploy package
        if: runner.os != 'Windows'
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE)'
